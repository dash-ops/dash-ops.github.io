export const apiReferenceTranslations = {
  en: {
    "api.title": "API Reference",
    "api.subtitle": "DashOPS provides a RESTful API built with Go, offering standardized endpoints for all cloud operations and authentication management.",
    "api.intro": "The DashOPS API is designed with consistency, security, and developer experience in mind. All endpoints follow REST conventions and return JSON responses.",
    "api.base-url": "Base URL",
    "api.authentication": "All API requests require authentication via session cookies or API tokens.",

    "api.overview.title": "API Overview",
    "api.overview.desc": "Core concepts and general usage patterns",
    "api.overview.versioning": "API Versioning",
    "api.overview.headers": "Required Headers",
    "api.overview.pagination": "Pagination",

    "api.auth.title": "Authentication Endpoints",
    "api.auth.desc": "Manage authentication and authorization",
    "api.auth.login": "Login with GitHub OAuth",
    "api.auth.logout": "Logout and invalidate session",
    "api.auth.profile": "Get current user profile",
    "api.auth.organizations": "List user's GitHub organizations",

    "api.core.title": "Core Endpoints",
    "api.core.desc": "Essential application endpoints",
    "api.core.health": "System health check",
    "api.core.version": "Application version info",
    "api.core.config": "Runtime configuration",

    "api.aws.title": "AWS Plugin Endpoints",
    "api.aws.desc": "Manage AWS resources across accounts",
    "api.aws.instances": "List EC2 instances",
    "api.aws.instance-details": "Get instance details",
    "api.aws.accounts": "List configured AWS accounts",
    "api.aws.regions": "Get available regions",
    "api.aws.costs": "Cost optimization data",

    "api.k8s.title": "Kubernetes Plugin Endpoints",
    "api.k8s.desc": "Manage Kubernetes clusters and resources",
    "api.k8s.clusters": "List available clusters",
    "api.k8s.pods": "List pods in namespace",
    "api.k8s.services": "List services in namespace",
    "api.k8s.deployments": "List deployments",
    "api.k8s.logs": "Get pod logs",

    "api.catalog.title": "Service Catalog Endpoints",
    "api.catalog.desc": "Manage service registry and health monitoring",
    "api.catalog.services": "List all services",
    "api.catalog.service-details": "Get service details",

    "api.errors.title": "Error Handling",
    "api.errors.desc": "All API endpoints use consistent error response format",
    "api.errors.format": "Error Response Format",
    "api.errors.codes": "Common HTTP Status Codes",
    "api.errors.200": "Request successful",
    "api.errors.400": "Bad request - invalid parameters",
    "api.errors.401": "Unauthorized - authentication required",
    "api.errors.403": "Forbidden - insufficient permissions",
    "api.errors.404": "Resource not found",
    "api.errors.500": "Internal server error",

    "api.testing.title": "Testing the API",
    "api.testing.desc": "Tools and examples for API testing",
    "api.testing.curl": "Using cURL",
    "api.testing.postman": "Postman Collection",
    "api.testing.sdk": "Official SDKs",

    "api.roadmap.title": "API Roadmap",
    "api.roadmap.desc": "Planned improvements and new features",
    "api.roadmap.v2": "API v2 Features",
    "api.roadmap.webhooks": "Webhook Support",
    "api.roadmap.graphql": "GraphQL Interface",
  },
  pt: {
    "api.title": "Referência da API",
    "api.subtitle": "O DashOPS fornece uma API RESTful construída com Go, oferecendo endpoints padronizados para todas as operações de nuvem e gerenciamento de autenticação.",
    "api.intro": "A API do DashOPS é projetada com consistência, segurança e experiência do desenvolvedor em mente. Todos os endpoints seguem convenções REST e retornam respostas JSON.",
    "api.base-url": "URL Base",
    "api.authentication": "Todas as requisições da API requerem autenticação via cookies de sessão ou tokens de API.",

    "api.overview.title": "Visão Geral da API",
    "api.overview.desc": "Conceitos centrais e padrões gerais de uso",
    "api.overview.versioning": "Versionamento da API",
    "api.overview.headers": "Cabeçalhos Obrigatórios",
    "api.overview.pagination": "Paginação",

    "api.auth.title": "Endpoints de Autenticação",
    "api.auth.desc": "Gerencie autenticação e autorização",
    "api.auth.login": "Login com OAuth do GitHub",
    "api.auth.logout": "Logout e invalidar sessão",
    "api.auth.profile": "Obter perfil do usuário atual",
    "api.auth.organizations": "Listar organizações do GitHub do usuário",

    "api.core.title": "Endpoints Centrais",
    "api.core.desc": "Endpoints essenciais da aplicação",
    "api.core.health": "Verificação de saúde do sistema",
    "api.core.version": "Informações da versão da aplicação",
    "api.core.config": "Configuração de tempo de execução",

    "api.aws.title": "Endpoints do Plugin AWS",
    "api.aws.desc": "Gerencie recursos AWS entre contas",
    "api.aws.instances": "Listar instâncias EC2",
    "api.aws.instance-details": "Obter detalhes da instância",
    "api.aws.accounts": "Listar contas AWS configuradas",
    "api.aws.regions": "Obter regiões disponíveis",
    "api.aws.costs": "Dados de otimização de custos",

    "api.k8s.title": "Endpoints do Plugin Kubernetes",
    "api.k8s.desc": "Gerencie clusters e recursos Kubernetes",
    "api.k8s.clusters": "Listar clusters disponíveis",
    "api.k8s.pods": "Listar pods no namespace",
    "api.k8s.services": "Listar serviços no namespace",
    "api.k8s.deployments": "Listar deployments",
    "api.k8s.logs": "Obter logs do pod",

    "api.catalog.title": "Endpoints do Catálogo de Serviços",
    "api.catalog.desc": "Gerencie registro de serviços e monitoramento de saúde",
    "api.catalog.services": "Listar todos os serviços",
    "api.catalog.service-details": "Obter detalhes do serviço",

    "api.errors.title": "Tratamento de Erros",
    "api.errors.desc": "Todos os endpoints da API usam formato de resposta de erro consistente",
    "api.errors.format": "Formato de Resposta de Erro",
    "api.errors.codes": "Códigos de Status HTTP Comuns",
    "api.errors.200": "Requisição bem-sucedida",
    "api.errors.400": "Requisição inválida - parâmetros inválidos",
    "api.errors.401": "Não autorizado - autenticação necessária",
    "api.errors.403": "Proibido - permissões insuficientes",
    "api.errors.404": "Recurso não encontrado",
    "api.errors.500": "Erro interno do servidor",

    "api.testing.title": "Testando a API",
    "api.testing.desc": "Ferramentas e exemplos para teste da API",
    "api.testing.curl": "Usando cURL",
    "api.testing.postman": "Coleção do Postman",
    "api.testing.sdk": "SDKs Oficiais",

    "api.roadmap.title": "Roadmap da API",
    "api.roadmap.desc": "Melhorias planejadas e novos recursos",
    "api.roadmap.v2": "Recursos da API v2",
    "api.roadmap.webhooks": "Suporte a Webhooks",
    "api.roadmap.graphql": "Interface GraphQL",
  }
}